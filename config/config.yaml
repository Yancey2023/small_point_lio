rosbag:
    path: /home/yancey/cpp/navigation/rosbag2_mid360_10hz/rosbag2_mid360_10hz.db3
    lidar_topic: /livox/lidar
    imu_topic: /livox/imu

# rosbag:
#     path: /home/yancey/cpp/navigation/rosbag2_mid360_100hz/rosbag2_mid360_100hz.db3
#     lidar_topic: /livox/lidar
#     imu_topic: /livox/imu

pointcloud_cache:
    update_interval: 0.1

small_point_lio:
    # 点云过滤
    point_filter_num: 1                        # 多少个点取一个点
    min_distance: 0.5                          # 点云半径最小值，小于该值会被过滤
    max_distance: 1000                         # 点云半径最大值，大于该值会被过滤
    space_downsample: true                     # 是否启用点云降采样
    space_downsample_leaf_size: 0.5            # 点云降采样时使用的栅格大小

    # IMU处理
    gravity: [0.0, 0.0, -9.810]                # 重力
    fix_gravity_direction: true                # 是否收集前200个IMU数据修正重力方向，重力的大小依旧从gravity参数获得
    check_satu: true                           # 是否开启IMU的数据饱和检查
    satu_acc: 3.0                              # IMU的加速度饱和阈值
    satu_gyro: 35.0                            # IMU的角速度饱和阈值
    acc_norm: 1.0                              # IMU的加速度单位是多少倍的重力

    # 地图
    map_resolution: 0.5                        # 地图分辨率
    init_map_size: 10                          # 接收到多少个点才初始化地图

    # 雷达与IMU相对位姿
    extrinsic_est_en: false                    # 雷达与IMU的相对位姿是否通过预测得到
    extrinsic_T: [-0.011, -0.02329, 0.04412]
    extrinsic_R: [1.0, 0.0, 0.0,
                  0.0, 1.0, 0.0,
                  0.0, 0.0, 1.0]

    # 滤波器参数
    # R
    laser_point_cov: 0.01                      # 激光点的协方差
    imu_meas_acc_cov: 0.01                     # IMU测量的加速度协方差
    imu_meas_omg_cov: 0.01                     # IMU测量的角速度协方差
    # Q
    velocity_cov: 20.0                         # 速度的协方差
    acceleration_cov: 500.0                    # 加速度的协方差
    omg_cov: 1000.0                            # 角速度的协方差
    ba_cov: 0.0001                             # 加速度偏置的协方差
    bg_cov: 0.0001                             # 角速度偏置的协方差

    plane_thr: 0.1                             # 平面匹配阈值，越小表示越严格
    match_s: 81.0                              # 当前点是否在平面上的阈值，越小表示越严格

    # 数据发布
    publish_odometry_without_downsample: false # 是否发布高频的里程计，需要注意的是这并不能提高里程计的实时性，反而会导致性能下降，建议通过增加点云发布频率来获得高频和高实时性的里程计
